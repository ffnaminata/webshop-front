{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'IndexPage',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      products: [],\n      list_cart: [],\n      total_price: 0,\n      nbr_product: 0,\n      error: null\n    };\n  },\n  created() {\n    this.fetchProducts();\n    this.fetchCart();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/products/');\n        this.products = response.data.result;\n        console.log(this.products);\n      } catch (error) {\n        this.error = 'Failed to fetch products.';\n      }\n    },\n    async fetchCart() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/carts/');\n        this.list_cart = response.data.cart.products;\n        await this.update_total();\n      } catch (error) {\n        this.error = 'Failed to fetch cart.';\n      }\n    },\n    async add_to_cart(id) {\n      try {\n        const response = await axios.post(`http://localhost:5000/api/carts/add/${id}`);\n        this.list_cart = response.data.cart.products;\n        await this.update_total();\n      } catch (error) {\n        this.error = 'Failed to add to cart.';\n      }\n    },\n    async update_total() {\n      try {\n        const response = await axios.get('http://localhost:5000/api/carts/summary');\n        this.total_price = response.data.total_price;\n        this.nbr_product = response.data.nbr_product;\n      } catch (error) {\n        this.error = 'Failed to update cart total.';\n      }\n    },\n    async remove_from_cart(id) {\n      try {\n        const response = await axios.post(`http://localhost:5000/api/carts/remove/${id}`);\n        this.list_cart = response.data.cart.products;\n        await this.update_total();\n      } catch (error) {\n        this.error = 'Failed to remove from cart.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","msg","String","data","products","list_cart","total_price","nbr_product","error","created","fetchProducts","fetchCart","methods","response","get","result","console","log","cart","update_total","add_to_cart","id","post","remove_from_cart"],"sources":["src/components/IndexPage.vue"],"sourcesContent":["<template>\n    <div class=\"IndexPage\">\n        <br>\n        <div class=\"row\">\n            <!-- Banner -->\n            <div class=\"jumbotron custom-banner\">\n                <h1 class=\"display-4\">VueJS Shopping App</h1>\n            </div>\n\n            <!-- Product list --> \n            <div class=\"col-md-9\">\n                <div class=\"row gx-4 gy-4 row-cols-3\">\n                    <div class=\"col\" v-for=\"(product, id) in products\" :key=\"id\">\n                        <div class=\"p-3 border bg-light\">\n                            <h5>{{ product.name }}</h5>\n                            <p>{{ product.desc }}</p>\n                            <p>{{ product.price }} </p>\n                            <button type=\"button\" class=\"btn btn-success btn-sm\" v-on:click=\"add_to_cart(product._id)\"> Ajouter au panier </button>\n                        </div> \n                    </div>\n                </div> \n            </div>\n\n            <!-- Cart -->\n            <div class=\"col-6 col-md-3\">\n                <div class=\"col\" >\n                    <div class=\"p-3 border bg-success\">\n                        <h5>Cart </h5>\n                    </div>\n                </div>\n                <div class=\"row gx-4 row-cols-1\">\n                    <div class=\"col\" v-for=\"(value, id) in list_cart\" :key=\"id\">\n                        <div class=\"p-3 border bg-light\">\n                            <h5>{{value.product.name}}</h5>\n                            <h6>Quantity : {{value.quantity}}</h6>\n                            <button type=\"button\" class=\"btn btn-success btn-sm\" v-on:click=\"remove_from_cart(value.product._id)\"> Supprimer </button>\n                        </div> \n                    </div>\n                    <!-- show total --> \n                    <div class=\"col\" >\n                        <div class=\"p-3 border bg-success\">\n                            <h5>Total : {{total_price}} </h5> \n                            <h6>Nombre de produits : {{nbr_product}} </h6>\n                        </div> \n                    </div>\n                </div> \n            </div>\n        </div> \n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'IndexPage', props: {\n        msg: String \n    },\n    data() {\n        return {\n            products: [],\n            list_cart: [],\n            total_price: 0,\n            nbr_product: 0,\n            error: null,\n        };\n    },\n    created() {\n        this.fetchProducts();\n        this.fetchCart();\n    },\n    methods: {\n        async fetchProducts() {\n            try {\n                const response = await axios.get('http://localhost:5000/api/products/');\n                this.products = response.data.result;\n                console.log(this.products);\n            } catch (error) {\n                this.error = 'Failed to fetch products.';\n            }\n        },\n\n        async fetchCart() {\n            try {\n                const response = await axios.get('http://localhost:5000/api/carts/');\n                this.list_cart = response.data.cart.products;\n                await this.update_total();\n            } catch (error) {\n                this.error = 'Failed to fetch cart.';\n            }\n        },\n\n        async add_to_cart(id) {\n            try {\n                const response = await axios.post(`http://localhost:5000/api/carts/add/${id}`);\n                this.list_cart = response.data.cart.products;\n                await this.update_total();\n            } catch (error) {\n                this.error = 'Failed to add to cart.';\n            }\n        },\n\n        async update_total() {\n            try {\n                const response = await axios.get('http://localhost:5000/api/carts/summary');\n                this.total_price = response.data.total_price;\n                this.nbr_product = response.data.nbr_product;\n            } catch (error) {\n                this.error = 'Failed to update cart total.';\n            }\n        },\n\n        async remove_from_cart(id) {\n            try {\n                const response = await axios.post(`http://localhost:5000/api/carts/remove/${id}`);\n                this.list_cart = response.data.cart.products;\n                await this.update_total();\n            } catch (error) {\n                this.error = 'Failed to remove from cart.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.custom-banner {\n    background-color: #f2f2f2;\n    padding: 20px; \n    margin: 20px;\n    border-radius: 10px;\n}  \n</style>"],"mappings":"AAoDA,OAAAA,KAAA;AAEA;EACAC,IAAA;EAAAC,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,WAAA;MACAC,WAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA,MAAAF,cAAA;MACA;QACA,MAAAG,QAAA,SAAAf,KAAA,CAAAgB,GAAA;QACA,KAAAV,QAAA,GAAAS,QAAA,CAAAV,IAAA,CAAAY,MAAA;QACAC,OAAA,CAAAC,GAAA,MAAAb,QAAA;MACA,SAAAI,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAG,UAAA;MACA;QACA,MAAAE,QAAA,SAAAf,KAAA,CAAAgB,GAAA;QACA,KAAAT,SAAA,GAAAQ,QAAA,CAAAV,IAAA,CAAAe,IAAA,CAAAd,QAAA;QACA,WAAAe,YAAA;MACA,SAAAX,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAY,YAAAC,EAAA;MACA;QACA,MAAAR,QAAA,SAAAf,KAAA,CAAAwB,IAAA,wCAAAD,EAAA;QACA,KAAAhB,SAAA,GAAAQ,QAAA,CAAAV,IAAA,CAAAe,IAAA,CAAAd,QAAA;QACA,WAAAe,YAAA;MACA,SAAAX,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAW,aAAA;MACA;QACA,MAAAN,QAAA,SAAAf,KAAA,CAAAgB,GAAA;QACA,KAAAR,WAAA,GAAAO,QAAA,CAAAV,IAAA,CAAAG,WAAA;QACA,KAAAC,WAAA,GAAAM,QAAA,CAAAV,IAAA,CAAAI,WAAA;MACA,SAAAC,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAe,iBAAAF,EAAA;MACA;QACA,MAAAR,QAAA,SAAAf,KAAA,CAAAwB,IAAA,2CAAAD,EAAA;QACA,KAAAhB,SAAA,GAAAQ,QAAA,CAAAV,IAAA,CAAAe,IAAA,CAAAd,QAAA;QACA,WAAAe,YAAA;MACA,SAAAX,KAAA;QACA,KAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}